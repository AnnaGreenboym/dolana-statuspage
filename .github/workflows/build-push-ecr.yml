name: Deploy Status-Page to AWS ECR

on:
  workflow_dispatch:
  push:
    branches:
      - lets-play
    paths:
      - Dockerfile
      - opt/**
      - .github/**

permissions:
  contents: write

env:
  ECR_URL: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ vars.ECR_REPOSITORY }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: lets-play

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          curl -SL https://github.com/docker/compose/releases/download/v2.33.1/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
          chmod +x /usr/local/bin/docker-compose
          python -m pip install --upgrade pip

      - name: Start Containers with Docker Compose
        run: |
          docker-compose up --build -d

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com

      - name: Build and Push Docker image
        run: |
          docker tag status-page:latest $ECR_URL:$IMAGE_TAG
          docker push $ECR_URL:$IMAGE_TAG

  update_manifest:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
    - name: Checkout lets-play branch
      uses: actions/checkout@v4
      with:
        ref: lets-play
        fetch-depth: 0  # Needed to push new branches


  update-manifest:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo and switch to manifest_update branch
      - uses: actions/checkout@v3
        with:
          ref: manifest_update
          fetch-depth: 0  # fetch all branches&#8203;:contentReference[oaicite:6]{index=6}

      - name: Refresh statuspage-deployment.yml with new image
        env:
          ECR_URL: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ vars.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Get the latest version of the file from lets-play branch
          git fetch origin lets-play
          git restore --source=origin/lets-play -- k8s_resources/statuspage/statuspage-deployment.yml

          # Replace placeholder with actual image URL:tag
          sed -i "s|image: <IMAGE_FROM_ECR>|image: $ECR_URL:$IMAGE_TAG|" k8s_resources/statuspage/statuspage-deployment.yml

          # Commit and push to manifest_update branch
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add k8s_resources/statuspage/statuspage-deployment.yml
          git commit -m "Update statuspage-deployment.yml with image $IMAGE_TAG"
          git push origin HEAD:manifest_update


